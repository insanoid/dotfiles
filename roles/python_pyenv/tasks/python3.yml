
- name: "Get latest Python 3.7"
  shell: "pyenv install --list | grep -i -E ' 3.7[0-9.]+$' | tr -d ' ' | tail -n 1"
  register: latest_python_3_7

- name: "Install Python {{ latest_python_3_7.stdout }}"
  pyenv:
    version: "{{ latest_python_3_7.stdout }}"

- name: "Get latest Python 3.6"
  shell: "pyenv install --list | grep -i -E ' 3.6[0-9.]+$' | tr -d ' ' | tail -n 1"
  register: latest_python_3_6

- name: "Install Python {{ latest_python_3_6.stdout }}"
  pyenv:
    version: "{{ latest_python_3_6.stdout }}"

- name: "Get latest Python 3.5"
  shell: "pyenv install --list | grep -i -E ' 3.5[0-9.]+$' | tr -d ' ' | tail -n 1"
  register: latest_python_3_5

- name: "Install Python {{ latest_python_3_5.stdout }}"
  pyenv:
    version: "{{ latest_python_3_5.stdout }}"

# https://github.com/pyenv/pyenv/wiki/Common-build-problems#error-the-python-ssl-extension-was-not-compiled-missing-the-openssl-lib
- name: Install a different SSL version to install Python 3.4
  apt: name=libssl1.0-dev state=latest
  become: true
  when: ansible_os_family == "Debian"

- name: "Get latest Python 3.4"
  shell: "pyenv install --list | grep -i -E ' 3.4[0-9.]+$' | tr -d ' ' | tail -n 1"
  register: latest_python_3_4

- name: "Install Python {{ latest_python_3_4.stdout }}"
  pyenv:
    version: "{{ latest_python_3_4.stdout }}"

- name: "Download Poetry install script (https://pypi.org/project/poetry/)"
  get_url:
    url: "https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py"
    dest: /tmp/get-poetry.py

- name: Install Poetry globally
  command: "python /tmp/get-poetry.py"

- name: Update Poetry
  command: "poetry self:update"

- name: "Download pip install script (https://pip.pypa.io/en/stable/installing/#installing-with-get-pip-py)"
  get_url:
    url: "https://bootstrap.pypa.io/get-pip.py"
    dest: /tmp/get-pip.py

- name: Install pip
  command: "python /tmp/get-pip.py"

- name: Update pip
  command: "pip install -U pip"

- name: "pipx: Install https://github.com/pipxproject/pipx#install-pipx"
  command: "python3 -m pip install -U --user pipx"

#export PATH=$PATH:~/.local/bin/ had to do this to make it work.
- name: "pipx: Ensure it's on $PATH"
  command: "pipx ensurepath"

- name: "pipx: Install Python 3 modules"
  with_items: "{{ python3_modules }}"
  shell: "pipx install {{ item }} || true"
